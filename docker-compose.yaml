services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: api
    ports:
      - 8080:8080
    restart: always
    networks:
      - my-network
    env_file:
      - .env.docker
    depends_on:
      db:
        condition: service_healthy

  bff:
    build:
      context: .
      dockerfile: Dockerfile.bff
    container_name: bff
    profiles: [all]
    ports:
      - 5000:5000
    restart: always
    networks:
      - my-network
    env_file:
      - .env.docker
    depends_on:
      db:
        condition: service_healthy

  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    container_name: web
    ports:
      - 5173:5173
    restart: always
    networks:
      - my-network
    env_file:
      - .env.docker
    depends_on:
      db:
        condition: service_healthy

    
  db:
    image: mysql:latest
    restart: always
    container_name: mysql
    env_file:
      - .env.docker
    ports:
      - 4450:3306
    volumes:
      - ./sql/dump.sql:/docker-entrypoint-initdb.d/dump.sql
    networks:
      - my-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  my-network:
    driver: bridge
